# Production Environment Configuration

# Database Configuration for Production (Render.com)
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration for Production
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Liquibase
spring.liquibase.enabled=true
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.yaml

# Server Configuration
server.port=${PORT:8080}

# Security Configuration
app.security.jwt.secret=${JWT_SECRET}
app.security.jwt.expiration=86400000

# CORS Configuration
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://*.onrender.com,https://*.netlify.app,https://*.vercel.app}

# Logging Configuration for Production
logging.level.com.aslaw=INFO
logging.level.com.infracore=INFO
logging.level.org.springframework.security=WARN
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=ERROR
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=ERROR
logging.level.root=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%level] %logger{36} - %msg%n

# File Upload Configuration
app.upload.provider=${UPLOAD_PROVIDER:cloudinary}
app.upload.dir=${UPLOAD_DIR:/tmp/uploads}

# Cloudinary Configuration
cloudinary.cloud-name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api-key=${CLOUDINARY_API_KEY}
cloudinary.api-secret=${CLOUDINARY_API_SECRET}

# Actuator Configuration
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=never 