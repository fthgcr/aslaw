# Database Configuration (Render.com Postgres)
# ENV VAR olarak şunları Render.com'da tanımlamalısın:
# DATABASE_URL=jdbc:postgresql://dpg-d1b89ieuk2gs739fgvt0-a.frankfurt-postgres.render.com:5432/aslaw_pgadmin
# DATABASE_USERNAME=aslaw_pgadmin_user
# DATABASE_PASSWORD=sKZdK4uxN2YrxDpGEFbJWknTZt8JbM7P
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false

# Liquibase
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.yaml

# Server Configuration
server.port=${PORT:8080}
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json

# Logging
logging.level.com.infracore=INFO
logging.level.org.springframework.security=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# Security
app.security.jwt.secret=${JWT_SECRET:myDefaultSecretKey12345678901234567890}
app.security.jwt.expiration=${JWT_EXPIRATION:86400000}

# Management endpoints
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when_authorized

# File Upload Configuration
app.upload.provider=${UPLOAD_PROVIDER:local}
app.upload.dir=${UPLOAD_DIR:/app/uploads}

# Cloudinary Configuration (for production file storage)
cloudinary.cloud-name=${CLOUDINARY_CLOUD_NAME:}
cloudinary.api-key=${CLOUDINARY_API_KEY:}
cloudinary.api-secret=${CLOUDINARY_API_SECRET:} 